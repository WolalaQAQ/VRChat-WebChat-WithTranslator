name: Build and Release

on:
  push:
    tags:
      - 'v*' # 匹配所有以v开头的标签，例如v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest] # 可以根据需要添加macos-latest和ubuntu-latest
        python-version: [3.12] # 根据您的项目需要调整Python版本

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # 获取所有历史记录和标签
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cx_Freeze
        # 安装您项目的依赖
        pip install -r requirements.txt
        
    - name: Build with cx_Freeze
      run: |
        python setup.py build
        
    - name: Zip build artifacts
      run: |
        # 根据操作系统选择打包命令
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cd build
          powershell Compress-Archive -Path "exe.*" -DestinationPath "../${{ github.ref_name }}-${{ matrix.os }}.zip"
        else
          cd build
          zip -r "../${{ github.ref_name }}-${{ matrix.os }}.zip" "exe.*"
        fi
      shell: bash
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ github.ref_name }}-${{ matrix.os }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
